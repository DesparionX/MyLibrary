<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Splash_CheckingAPI" xml:space="preserve">
    <value>Checking API...</value>
  </data>
  <data name="Splash_CheckingDB" xml:space="preserve">
    <value>Checking DB...</value>
  </data>
  <data name="Splash_Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="Splash_LoadingComplete" xml:space="preserve">
    <value>Starting...</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Splash_APIChecksFailed" xml:space="preserve">
    <value>Health check failed. Please check your API and Database connection.</value>
  </data>
  <data name="Validators_Email_Invalid" xml:space="preserve">
    <value>Email is not valid.</value>
  </data>
  <data name="Validators_Password_NullOrEmpty" xml:space="preserve">
    <value>Password cannot be null or empty.</value>
  </data>
  <data name="Validators_Password_MinChars" xml:space="preserve">
    <value>Password must be at least 8 characters long.</value>
  </data>
  <data name="Validators_Password_MaxChars" xml:space="preserve">
    <value>Password must be at most 20 characters long.</value>
  </data>
  <data name="Validators_Password_OneUppercase" xml:space="preserve">
    <value>Password must contain at least one uppercase letter.</value>
  </data>
  <data name="Validators_Password_OneLowercase" xml:space="preserve">
    <value>Password must contain at least one lowercase letter.</value>
  </data>
  <data name="Validators_Username_NullOrEmpty" xml:space="preserve">
    <value>Username cannot be null or empty.</value>
  </data>
  <data name="Validators_Username_MinChars" xml:space="preserve">
    <value>Username must be at least 3 characters long.</value>
  </data>
  <data name="Validators_Username_MaxChars" xml:space="preserve">
    <value>Username must be at most 30 characters long.</value>
  </data>
  <data name="Validators_Username_LettersAndDigits" xml:space="preserve">
    <value>Username can only contain letters and digits.</value>
  </data>
  <data name="Errors_NavigatingToWindow" xml:space="preserve">
    <value>Error navigating to window: </value>
  </data>
  <data name="Errors_AuthService_ClearingUserIdentity" xml:space="preserve">
    <value>Error clearing user identity.</value>
  </data>
  <data name="Errors_AuthHeader_FailedSendingRequest" xml:space="preserve">
    <value>An error occurred while sending the request: </value>
  </data>
  <data name="Errors_UserService_LoginFailed" xml:space="preserve">
    <value>Login failed.</value>
  </data>
  <data name="Errors_UserService_InvalidResponse" xml:space="preserve">
    <value>Invalid response from server.</value>
  </data>
  <data name="LogIn_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="LogIn_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="LogIn_LogInButton" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="Errors_NavigatingToView" xml:space="preserve">
    <value>Error navigating to view:</value>
  </data>
  <data name="Errors_ClosingApp" xml:space="preserve">
    <value>Error closing the app.</value>
  </data>
  <data name="Home_BorrowBooks" xml:space="preserve">
    <value>Borrow</value>
  </data>
  <data name="Home_Sell" xml:space="preserve">
    <value>Sell</value>
  </data>
  <data name="Home_ReturnBooks" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="Sell_Validations_NullOrder" xml:space="preserve">
    <value>Order cannot be null.</value>
  </data>
  <data name="BookService_Errors_ErrorFetchingBookByID" xml:space="preserve">
    <value>Error fetching book by ID.</value>
  </data>
  <data name="Sell_Validations_ID_NullOrWhiteSpace" xml:space="preserve">
    <value>Item ID cannot be null.</value>
  </data>
  <data name="Sell_Validations_ISBN_NullOrWhiteSpace" xml:space="preserve">
    <value>ISBN cannot be null.</value>
  </data>
  <data name="Sell_Validations_ItemNotFound" xml:space="preserve">
    <value>No item with such ID/ISBN.</value>
  </data>
  <data name="Sell_Validations_NullQuantity" xml:space="preserve">
    <value>Quantity must be at least 1.</value>
  </data>
  <data name="BookService_Errors_ErrorFetchingBookByISBN" xml:space="preserve">
    <value>Error fetching book by ISBN.</value>
  </data>
  <data name="Book_Details_ID" xml:space="preserve">
    <value>ID:</value>
  </data>
  <data name="Book_Details_ISBN" xml:space="preserve">
    <value>ISBN:</value>
  </data>
  <data name="Book_Details_Title" xml:space="preserve">
    <value>Title:</value>
  </data>
  <data name="Book_Details_Genre" xml:space="preserve">
    <value>Genre:</value>
  </data>
  <data name="Book_Details_Author" xml:space="preserve">
    <value>Author:</value>
  </data>
  <data name="Book_Details_Publisher" xml:space="preserve">
    <value>Publisher:</value>
  </data>
  <data name="Recipe_Header_ISBN" xml:space="preserve">
    <value>ISBN</value>
  </data>
  <data name="Recipe_Header_Name" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Recipe_Header_Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Recipe_Header_Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Book_Details_Description" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="Recipe_Header_Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Errors_Receipt_ZeroOrders" xml:space="preserve">
    <value>No items in the receipt. Please add items before finalizing the sale.</value>
  </data>
  <data name="Errors_Receipt_ISBNNotFound" xml:space="preserve">
    <value>No item found with given ISBN.</value>
  </data>
  <data name="Errors_Receipt_EmptyISBN" xml:space="preserve">
    <value>ISBN cannot be empty.</value>
  </data>
  <data name="CustomDialog_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="CustomDialog_Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="CustomDialog_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CustomDialog_Title_Success" xml:space="preserve">
    <value>Success !</value>
  </data>
  <data name="CustomDialog_Title_Fail" xml:space="preserve">
    <value>Error !</value>
  </data>
  <data name="FileService_Errors_InvalidFilePath" xml:space="preserve">
    <value>File path is invalid or file does not exist.</value>
  </data>
  <data name="FileService_Errors_InvalidFileType" xml:space="preserve">
    <value>Invalid file type. Allowed types are: </value>
  </data>
  <data name="FileService_Errors_InvalidFileSize" xml:space="preserve">
    <value>File size exceeds the maximum limit of 5MB.</value>
  </data>
  <data name="Receipt_AddNewItem_NotFoundOrNotAvailable" xml:space="preserve">
    <value>The book is either not found, or out of stock.</value>
  </data>
  <data name="Book_Details_Borrower" xml:space="preserve">
    <value>Borrower:</value>
  </data>
  <data name="Buttons_Find" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="Buttons_Return" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="Buttons_Borrow" xml:space="preserve">
    <value>Borrow</value>
  </data>
  <data name="TextBoxes_BookID" xml:space="preserve">
    <value>Book ID</value>
  </data>
  <data name="Validators_BookId_Invalid" xml:space="preserve">
    <value>Invalid Book ID.</value>
  </data>
  <data name="Errors_Api_NullResponse" xml:space="preserve">
    <value>API response was null.</value>
  </data>
  <data name="Errors_Borrows_FailedToGetBorrow" xml:space="preserve">
    <value>Failed to get borrow from the DB.</value>
  </data>
  <data name="Borrows_Validations_EmptyID" xml:space="preserve">
    <value>ID field cannot be empty.</value>
  </data>
  <data name="Borrows_Validations_InvalidID" xml:space="preserve">
    <value>This is not a valid ID.</value>
  </data>
  <data name="Borrows_Successfully_Borrowed" xml:space="preserve">
    <value>Book borrowed successfully.</value>
  </data>
  <data name="Borrows_Failed_To_Borrow" xml:space="preserve">
    <value>Book borrow failed.</value>
  </data>
  <data name="Borrows_Missing_Book" xml:space="preserve">
    <value>For some reason the book was not selected.</value>
  </data>
  <data name="Errors_Book_Already_Returned" xml:space="preserve">
    <value>Book is already returned, or not borrowed at all.</value>
  </data>
  <data name="Return_Book_Returned_Successfully" xml:space="preserve">
    <value>Book returned successfully.</value>
  </data>
</root>